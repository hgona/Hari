class Solution {
   public int solution(String str) {

        if (str.length() % 2 != 0) {
            return 0;
        }

        Character oBrace = new Character('{');
        Character oBracket = new Character('[');
        Character oParen = new Character('(');
        Stack<Character> oStack = new Stack<Character>();

        for (int i = 0; i < str.length(); i++) {
            char c = str.charAt(i);
            if (c == oBrace || c == oBracket || c == oParen) {
                oStack.push(c);
            } else  {
                if (oStack.isEmpty()) {
                    return 0;
                }
                Character oCharacter = oStack.pop();
                switch (c) {
                case '}':
                    if (!oCharacter.equals(oBrace)) {
                        return 0;
                    }
                    break;
                case ']':
                    if (!oCharacter.equals(oBracket)) {
                        return 0;
                    }
                    break;
                case ')':
                    if (!oCharacter.equals(oParen)) {
                        return 0;
                    }
                    break;

                default:
                    break;
                }
            } 
        }
        if (!oStack.isEmpty()) {
            return 0;
        }

        return 1;

    }
}